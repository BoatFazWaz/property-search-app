generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  name           String?
  password       String
  role           UserRole  @default(USER)
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  properties     Property[]
  savedProperties SavedProperty[]

  @@map("users")
}

model Property {
  id          String    @id @default(uuid())
  title       String
  price       Float
  description String    @db.Text
  address     String
  city        String
  state       String
  zipCode     String    @map("zip_code")
  bedrooms    Int
  bathrooms   Float
  area        Float
  type        PropertyType
  status      PropertyStatus @default(AVAILABLE)
  features    Json?
  images      PropertyImage[]
  latitude    Float?
  longitude   Float?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  userId      String    @map("user_id")
  user        User      @relation(fields: [userId], references: [id])
  savedBy     SavedProperty[]

  @@map("properties")
}

model PropertyImage {
  id         String   @id @default(uuid())
  url        String
  propertyId String   @map("property_id")
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("property_images")
}

model SavedProperty {
  id         String   @id @default(uuid())
  userId     String   @map("user_id")
  propertyId String   @map("property_id")
  createdAt  DateTime @default(now()) @map("created_at")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@unique([userId, propertyId])
  @@map("saved_properties")
}

enum UserRole {
  USER
  AGENT
  ADMIN
}

enum PropertyType {
  HOUSE
  APARTMENT
  CONDO
  TOWNHOUSE
  LAND
  COMMERCIAL
}

enum PropertyStatus {
  AVAILABLE
  SOLD
  PENDING
  RENTED
} 